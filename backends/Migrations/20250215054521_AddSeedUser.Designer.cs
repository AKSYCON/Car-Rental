// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250215054521_AddSeedUser")]
    partial class AddSeedUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("backend.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RentalPricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "White",
                            DateAdded = new DateTime(2025, 2, 15, 5, 45, 20, 887, DateTimeKind.Utc).AddTicks(5085),
                            IsAvailable = true,
                            Make = "Toyota",
                            Model = "Corolla",
                            Picture = "/pictures/Toyota-Corolla.jpg",
                            RentalPricePerDay = 5000m,
                            Year = 2022
                        },
                        new
                        {
                            Id = 2,
                            Color = "Black",
                            DateAdded = new DateTime(2025, 2, 15, 5, 45, 20, 887, DateTimeKind.Utc).AddTicks(5315),
                            IsAvailable = true,
                            Make = "Honda",
                            Model = "Civic",
                            Picture = "/pictures/Honda-Civic.jpg",
                            RentalPricePerDay = 5500m,
                            Year = 2023
                        },
                        new
                        {
                            Id = 3,
                            Color = "Red",
                            DateAdded = new DateTime(2025, 2, 15, 5, 45, 20, 887, DateTimeKind.Utc).AddTicks(5317),
                            IsAvailable = true,
                            Make = "Ford",
                            Model = "Mustang",
                            Picture = "/pictures/Ford-Mustang.jpg",
                            RentalPricePerDay = 12000m,
                            Year = 2021
                        });
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2025, 2, 15, 5, 45, 20, 886, DateTimeKind.Utc).AddTicks(4298),
                            PasswordHash = "$2a$11$asRY4oZ3L5DWc2sV.VBtnOhHVI2ngh0lLYyOQcvD04uuBxW3TOuey",
                            PasswordSalt = "$2a$11$asRY4oZ3L5DWc2sV.VBtnO",
                            Role = "Admin",
                            Username = "ArhamAdmin"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2025, 2, 15, 5, 45, 20, 887, DateTimeKind.Utc).AddTicks(2637),
                            PasswordHash = "$2a$11$99DGr/A531y9H0ARnQ94eO4XSjWUwPAwcAyzcEF1ftwfKx5rIBF2C",
                            PasswordSalt = "$2a$11$99DGr/A531y9H0ARnQ94eO",
                            Role = "User",
                            Username = "User"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
